import type { ListItem } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { HiX } from "react-icons/hi";
import { motion } from "framer-motion";

import { ItemModal } from "../components/ItemModal";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const [items, setItems] = useState<ListItem[]>([]);
  const [checkedItems, setCheckedItems] = useState<ListItem[]>([]);
  const [modalOpen, setModalOpen] = useState<boolean>(false);

  const { data: itemsData, isLoading } = trpc.item.getItems.useQuery();
  const { mutate: deleteItem } = trpc.item.deleteItem.useMutation({
    onSuccess: (deletedItem) => {
      setItems((prev) => prev.filter((item) => item.id !== deletedItem.id));
    },
  });

  const { mutate: toggleChecked } = trpc.item.toggleChecked.useMutation({
    onSuccess(shoppingItem) {
      if (checkedItems.some((item) => item.id === shoppingItem.id)) {
        setCheckedItems((prev) =>
          prev.filter((item) => item.id !== shoppingItem.id)
        );
      } else {
        setCheckedItems((prev) => [...prev, shoppingItem]);
      }
    },
  });

  if (!itemsData || isLoading) return <p>loading boiz pls wait</p>;

  if (items.length === 0 && itemsData.length > 0) {
    setItems(itemsData);
    const checked = itemsData.filter((item) => item.checked);
    setCheckedItems(checked);
  }

  return (
    <>
      <Head>
        <title>t3 shopping list</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {modalOpen && (
        <ItemModal setModalOpen={setModalOpen} setItems={setItems} />
      )}

      <main className="mx-auto my-12 max-w-3xl">
        <div className="flex justify-between">
          <h2 className="text-center text-2xl font-semibold">
            my shopping list
          </h2>
          <button
            className="rounded-xl bg-blue-400 p-3 text-sm text-white transition hover:bg-blue-500"
            onClick={() => setModalOpen(true)}
          >
            add item
          </button>
        </div>

        <ul className="mt-4">
          {items &&
            items.map((item) => {
              const { id } = item;

              return (
                <li
                  key={id}
                  className="flex w-full items-center justify-between"
                >
                  <div className="relative">
                    <div className="pointer-events-none absolute inset-0 flex origin-left items-center justify-center">
                      <motion.div
                        initial={{ width: 0 }}
                        animate={{
                          width: checkedItems.some((item) => item.id === id)
                            ? "100%"
                            : 0,
                        }}
                        transition={{ duration: 0.2, ease: "easeInOut" }}
                        className="h-[2px] w-full translate-y-px bg-red-500"
                      />
                    </div>
                    <span
                      onClick={() => {
                        console.log("clicked", id);
                        toggleChecked({
                          id,
                          checked: checkedItems.some((item) => item.id === id)
                            ? false
                            : true,
                        });
                      }}
                    >
                      {item.name}
                    </span>
                  </div>
                  <HiX
                    onClick={() => deleteItem({ id })}
                    className="cursor-pointer text-lg text-red-500"
                  />
                </li>
              );
            })}
        </ul>
      </main>
    </>
  );
};

export default Home;
